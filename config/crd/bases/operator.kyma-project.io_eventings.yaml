---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: eventings.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Eventing
    listKind: EventingList
    plural: eventings
    singular: eventing
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: State of Eventing
      jsonPath: .status.state
      name: State
      type: string
    - description: Type of Eventing backend, either NATS or EventMesh
      jsonPath: .spec.backend.type
      name: Backend
      type: string
    - description: Age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Eventing is the Schema for the eventing API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            default:
              logging:
                logLevel: Info
              publisher:
                replicas:
                  max: 2
                  min: 2
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 40m
                    memory: 256Mi
            description: EventingSpec defines the desired state of Eventing.
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations allows to add annotations to resources.
                type: object
              backend:
                description: Backend defines the active backend used by Eventing.
                properties:
                  config:
                    default:
                      natsMaxMsgsPerTopic: 1000000
                      natsStreamMaxSize: 700Mi
                      natsStreamReplicas: 3
                      natsStreamStorageType: File
                    description: Config defines configuration for eventing backend.
                    properties:
                      domain:
                        description: |-
                          Domain defines the cluster public domain used to configure the EventMesh Subscriptions
                          and their corresponding ApiRules.
                        pattern: ^(?:([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*)?$
                        type: string
                      eventMeshSecret:
                        description: EventMeshSecret defines the namespaced name of
                          K8s Secret containing EventMesh credentials. The format
                          of name is "namespace/name".
                        pattern: ^[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+$
                        type: string
                      eventTypePrefix:
                        default: sap.kyma.custom
                        type: string
                        x-kubernetes-validations:
                        - message: eventTypePrefix cannot be empty
                          rule: self!=''
                      natsMaxMsgsPerTopic:
                        default: 1000000
                        description: NATSMaxMsgsPerTopic limits how many messages
                          in the NATS stream to retain per subject.
                        type: integer
                      natsStreamMaxSize:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 700Mi
                        description: NATSStreamMaxSize defines the maximum storage
                          size for stream data.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      natsStreamReplicas:
                        default: 3
                        description: NATSStreamReplicas defines the number of replicas
                          for stream.
                        type: integer
                      natsStreamStorageType:
                        default: File
                        description: NATSStreamStorageType defines the storage type
                          for stream data.
                        type: string
                        x-kubernetes-validations:
                        - message: storage type can only be set to File or Memory
                          rule: self=='File' || self=='Memory'
                    type: object
                  type:
                    default: NATS
                    description: Type defines which backend to use. The value is either
                      `EventMesh`, or `NATS`.
                    type: string
                    x-kubernetes-validations:
                    - message: backend type can only be set to NATS or EventMesh
                      rule: self=='NATS' || self=='EventMesh' || self==''
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: secret cannot be empty if EventMesh backend is used
                  rule: ' (self.type != ''EventMesh'') || ((self.type == ''EventMesh'')
                    && (self.config.eventMeshSecret != ''''))'
              labels:
                additionalProperties:
                  type: string
                description: Labels allows to add Labels to resources.
                type: object
              logging:
                default:
                  logLevel: Info
                description: Logging defines the log level for eventing-manager.
                properties:
                  logLevel:
                    default: Info
                    description: LogLevel defines the log level.
                    type: string
                    x-kubernetes-validations:
                    - message: logLevel can only be set to Debug, Info, Warn or Error
                      rule: self=='Info' || self=='Warn' || self=='Error' || self=='Debug'
                type: object
              publisher:
                default:
                  replicas:
                    max: 2
                    min: 2
                  resources:
                    limits:
                      cpu: 500m
                      memory: 512Mi
                    requests:
                      cpu: 40m
                      memory: 256Mi
                description: Publisher defines the configurations for eventing-publisher-proxy.
                properties:
                  replicas:
                    default:
                      max: 2
                      min: 2
                    description: Replicas defines the scaling min/max for eventing-publisher-proxy.
                    properties:
                      max:
                        default: 2
                        description: Max defines maximum number of replicas.
                        type: integer
                      min:
                        default: 2
                        description: Min defines minimum number of replicas.
                        minimum: 0
                        type: integer
                    type: object
                    x-kubernetes-validations:
                    - message: min value must be smaller than the max value
                      rule: self.min <= self.max
                  resources:
                    default:
                      limits:
                        cpu: 500m
                        memory: 512Mi
                      requests:
                        cpu: 40m
                        memory: 256Mi
                    description: Resources defines resources for eventing-publisher-proxy.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
            type: object
            x-kubernetes-validations:
            - message: backend config cannot be deleted
              rule: '!(oldSelf!=null && has(oldSelf.backend)) || has(self.backend)'
          status:
            description: EventingStatus defines the observed state of Eventing.
            properties:
              activeBackend:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              publisherService:
                type: string
              specHash:
                format: int64
                type: integer
              state:
                description: |-
                  Can have one of the following values: Ready, Error, Processing, Warning. Ready state is set
                  when all the resources are deployed successfully and backend is connected.
                  It gets Warning state in case backend is not specified, NATS module is not installed, or EventMesh secret is missing in the cluster.
                  Error state is set when there is an error. Processing state is set if recources are being created or changed.
                type: string
            required:
            - activeBackend
            - specHash
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
