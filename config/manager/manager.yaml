apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-manager
  namespace: system
  labels:
    control-plane: eventing-manager
    app.kubernetes.io/name: eventing-manager
    app.kubernetes.io/instance: eventing-manager
    app.kubernetes.io/component: eventing-manager
    app.kubernetes.io/created-by: eventing-manager
    app.kubernetes.io/part-of: eventing-manager
spec:
  selector:
    matchLabels:
      control-plane: eventing-manager
      app.kubernetes.io/name: eventing-manager
      app.kubernetes.io/instance: eventing-manager
      app.kubernetes.io/component: eventing-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        traffic.sidecar.istio.io/excludeInboundPorts: "9443"
      labels:
        control-plane: eventing-manager
        app.kubernetes.io/name: eventing-manager
        app.kubernetes.io/instance: eventing-manager
        app.kubernetes.io/component: eventing-manager
    spec:
      priorityClassName: "eventing-manager-priority-class"
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: EVENTING_CR_NAME
            value: "eventing"
          - name: EVENTING_CR_NAMESPACE
            value: "kyma-system"
          - name: NATS_URL
            value: eventing-nats.kyma-system.svc.cluster.local
          - name: PUBLISHER_REQUESTS_CPU
            value: 10m
          - name: PUBLISHER_REQUESTS_MEMORY
            value: 64Mi
          - name: PUBLISHER_LIMITS_CPU
            value: 100m
          - name: PUBLISHER_LIMITS_MEMORY
            value: 128Mi
          - name: PUBLISHER_IMAGE
            value: "europe-docker.pkg.dev/kyma-project/prod/eventing-publisher-proxy:1.0.1"
          - name: PUBLISHER_IMAGE_PULL_POLICY
            value: "IfNotPresent"
          - name: PUBLISHER_REPLICAS
            value: "1"
          - name: PUBLISHER_REQUEST_TIMEOUT
            value: "10s"
          - name: DEFAULT_MAX_IN_FLIGHT_MESSAGES
            value: "10"
          - name: DEFAULT_DISPATCHER_RETRY_PERIOD
            value: "5m"
          - name: DEFAULT_DISPATCHER_MAX_RETRIES
            value: "10"
          - name: APP_LOG_FORMAT
            value: "json"
          - name: APP_LOG_LEVEL
            value: "info"
          - name: JS_STREAM_NAME
            value: "sap"
          - name: JS_STREAM_SUBJECT_PREFIX
            value: "kyma"
          - name: JS_STREAM_STORAGE_TYPE
            value: "file"
          - name: JS_STREAM_REPLICAS
            value: "1"
          - name: JS_STREAM_DISCARD_POLICY
            value: "new"
          - name: JS_STREAM_RETENTION_POLICY
            value: "interest"
          - name: JS_CONSUMER_DELIVER_POLICY
            value: "new"
          - name: JS_STREAM_MAX_MSGS
            value: "-1"
          - name: JS_STREAM_MAX_BYTES
            value: "700Mi"
          - name: WEBHOOK_SECRET_NAME
            value: "eventing-manager-webhook-server-cert"
          - name: MUTATING_WEBHOOK_NAME
            value: "subscription-mutating-webhook-configuration"
          - name: VALIDATING_WEBHOOK_NAME
            value: "subscription-validating-webhook-configuration"
          - name: EVENTING_WEBHOOK_AUTH_SECRET_NAME
            value: "eventing-webhook-auth"
          - name: EVENTING_WEBHOOK_AUTH_SECRET_NAMESPACE
            value: "kyma-system"
        image: controller:latest
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      serviceAccountName: eventing-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: "eventing-manager-webhook-server-cert"
